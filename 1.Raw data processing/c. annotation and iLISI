# load scType function
source("https://raw.githubusercontent.com/IanevskiAleksandr/sc-type/master/R/sctype_score_.R")
source("https://raw.githubusercontent.com/IanevskiAleksandr/sc-type/master/R/auto_detect_tissue_type.R")

gene_sets_prepare_fixed <- function(path_to_db_file, cell_type){
  
  cell_markers = path_to_db_file
  cell_markers = cell_markers[cell_markers$tissueType == cell_type,] 
  cell_markers$pos_marker = gsub(" ","",cell_markers$pos_marker); cell_markers$neg_marker = gsub(" ","",cell_markers$neg_marker)
  
  # correct gene symbols from the given DB (up-genes)
  cell_markers$pos_marker = sapply(1:nrow(cell_markers), function(i){
    
    markers_all = gsub(" ", "", unlist(strsplit(cell_markers$pos_marker[i],",")))
    markers_all = toupper(markers_all[markers_all != "NA" & markers_all != ""])
    markers_all = sort(markers_all)
    
    if(length(markers_all) > 0){
      suppressMessages({markers_all = unique(na.omit(checkGeneSymbols(markers_all)$Suggested.Symbol))})
      paste0(markers_all, collapse=",")
    } else {
      ""
    }
  })
  
  # correct gene symbols from the given DB (down-genes)
  cell_markers$neg_marker = sapply(1:nrow(cell_markers), function(i){
    
    markers_all = gsub(" ", "", unlist(strsplit(cell_markers$neg_marker[i],",")))
    markers_all = toupper(markers_all[markers_all != "NA" & markers_all != ""])
    markers_all = sort(markers_all)
    
    if(length(markers_all) > 0){
      suppressMessages({markers_all = unique(na.omit(checkGeneSymbols(markers_all)$Suggested.Symbol))})
      paste0(markers_all, collapse=",")
    } else {
      ""
    }
  })
  
  cell_markers$pos_marker = gsub("///",",",cell_markers$pos_marker);cell_markers$pos_marker = gsub(" ","",cell_markers$pos_marker)
  cell_markers$neg_marker = gsub("///",",",cell_markers$neg_marker);cell_markers$neg_marker = gsub(" ","",cell_markers$neg_marker)
   
  gs = lapply(1:nrow(cell_markers), function(j) gsub(" ","",unlist(strsplit(toString(cell_markers$pos_marker[j]),",")))); names(gs) = cell_markers$cellName
  gs2 = lapply(1:nrow(cell_markers), function(j) gsub(" ","",unlist(strsplit(toString(cell_markers$neg_marker[j]),",")))); names(gs2) = cell_markers$cellName
  
  list(gs_positive = gs, gs_negative = gs2)
}






------------------------- scType

db_ <- read.csv ("./marker_genes.csv", header = T, sep = ",")
tissue = "Brain" # e.g. Immune system,Pancreas,Liver,Eye,Kidney,Brain,Lung,Adrenal,Heart,Intestine,Muscle,Placenta,Spleen,Stomach,Thymus 
gs_list = gene_sets_prepare_fixed(db_, tissue)
es.max = sctype_score(scRNAseqData = merged_seurat[["integrated"]]@scale.data, scaled = TRUE, 
                      gs = gs_list$gs_positive, gs2 = gs_list$gs_negative) 
cL_resutls = do.call("rbind", lapply(unique(merged_seurat@meta.data$seurat_clusters), function(cl){
    es.max.cl = sort(rowSums(es.max[ ,rownames(merged_seurat@meta.data[merged_seurat@meta.data$seurat_clusters==cl, ])]), decreasing = !0)
    head(data.frame(cluster = cl, type = names(es.max.cl), scores = es.max.cl, ncells = sum(merged_seurat@meta.data$seurat_clusters==cl)), 10)
}))
sctype_scores = cL_resutls %>% group_by(cluster) %>% top_n(n = 1, wt = scores)  
sctype_scores$type[as.numeric(as.character(sctype_scores$scores)) < sctype_scores$ncells/10] = "Unknown"
print(sctype_scores[,1:3])



----------------------------Visualise
colpal <- c ("#C7EBB1", "#FFD5FF", "#81B1DE", "#CA2F40", "#DEB0B0", "#C1D4E6", "#34854D", "#FCA594", "#C58862", "#7F517D", "#33608C", "#F5CA61", "#49525E")
DimPlot(merged_seurat_2, reduction = 'umap', label = FALSE, group.by = "customclassif_merged", repel = T, cols = colpal) + NoAxes() + ggtitle("")

cell_type <- unique(merged_seurat$customclassif_merged)

cell_type_plot <- list()


for (i in seq_along(cell_type)) {
  cell_name <- my_levels[i]
  cell_col <- colpal[i]
  study_cells <- which(merged_seurat$customclassif_merged == cell_name)
  
  plot <- DimPlot(merged_seurat, label = FALSE, group.by = "customclassif_merged",
                  cells.highlight = study_cells,
                  cols.highlight = cell_col,
                  cols = "grey",
                  sizes.highlight = 0.01,
                  raster = FALSE) + NoLegend() + ggtitle(paste(cell_name)) + NoAxes()
  
  cell_type_plot[[cell_name]] <- plot
}
cell_type_plot

------------------------------Check integration
library(scIntegrationMetrics)
metrics <- getIntegrationMetrics(merged_seurat, meta.label = "customclassif_merged",
                                  meta.batch = "study",
                                  iLISI_perplexity = 20)
