-------------------------Find the presence of matrisome signatures

# import matrisome db
```{r}
matrisome <- read.table("~/Hs_Matrisome_Masterlist.csv", header = T, sep = ',')
#extract gene symbols
matrisome_list <- matrisome$Gene_Symbol
```
#split core and associated matrisome
```{r}
core_matrisome <- subset(matrisome, subset = Division == "Core matrisome")
associated_matrisome <- subset(matrisome, subset = Division == "Matrisome-associated")
# extrarct gene symbol 
selected_core_matrisome <- core_matrisome$Gene_Symbol
selected_associated_matrisome <- associated_matrisome$Gene_Symbol
```

```{r}
Idents(merged_seurat) <- merged_seurat$customclassif_merged
pseudo_seurat <- AggregateExpression(merged_seurat, assays = "RNA", return.seurat = T, group.by ="customclassif_merged")
pseudo_seurat <- NormalizeData(pseudo_seurat, normalization.method="RC", scale.factor=1e6)
my_levels <- c('vRG', 'oRG', 'tRG', 'IPC', 'Imm. PN', 'CPN', 'DA neuron', 'GABA IN', 'OPC', 'Astro.', 'Microglia')
pseudo_mat <- GetAssayData(object = pseudo_seurat, assay = "RNA")
```
```{r}
htcfeat <- intersect(rownames(pseudo_seurat$RNA), selected_core_matrisome)
length(htcfeat)
htafeat <- intersect(rownames(pseudo_seurat$RNA), selected_associated_matrisome)
length(htafeat)
```

```{r}
mat<- pseudo_mat[htcfeat, ] %>% as.matrix()
mat<- t(scale(t(mat)))
cluster_anno<- colnames(pseudo_seurat$RNA)
myCol <- colorRampPalette(c('dodgerblue', 'black', 'yellow'))(50)
myBreaks <- seq(-2, 2, length.out = 50)
custom_cht <- Heatmap(mat, name = "Expression",  
        column_split = factor(cluster_anno, levels = my_levels),
        cluster_columns = FALSE,
        show_column_dend = FALSE,
        cluster_column_slices = TRUE,
        column_title_gp = gpar(fontsize = 8),
        column_gap = unit(0.5, "mm"),
        cluster_rows = TRUE,
        show_row_dend = FALSE,
        col = colorRamp2(myBreaks, myCol),
        row_names_gp = gpar(fontsize = 2),
        column_title_rot = 90,
        top_annotation = HeatmapAnnotation(foo = anno_block(gp = gpar(fill = colpal))),
        show_column_names = FALSE,
        use_raster = TRUE)
```

```{r}
mat<- pseudo_mat[htafeat, ] %>% as.matrix()
mat<- t(scale(t(mat)))
complete_rows <- complete.cases(mat)
mat<- mat[complete_rows, ]
cluster_anno<- colnames(pseudo_seurat$RNA)
myCol <- colorRampPalette(c('dodgerblue', 'black', 'yellow'))(50)
myBreaks <- seq(-2, 2, length.out = 50)
custom_aht <- Heatmap(mat, name = "Expression",  
        column_split = factor(cluster_anno, levels = my_levels),
        cluster_columns = FALSE,
        show_column_dend = FALSE,
        cluster_column_slices = TRUE,
        column_title_gp = gpar(fontsize = 8),
        column_gap = unit(0.5, "mm"),
        cluster_rows = TRUE,
        show_row_dend = FALSE,
        col = colorRamp2(myBreaks, myCol),
        row_names_gp = gpar(fontsize = 2),
        column_title_rot = 90,
        top_annotation = HeatmapAnnotation(foo = anno_block(gp = gpar(fill = colpal))),
        show_column_names = FALSE,
        use_raster = TRUE)
```


-------------------------------------------Enrichment across all cell types
```{r}
all.markers <- FindAllMarkers(merged_seurat, only.pos = T)

all.markers <- subset (all.markers, pct.1 > 0.25)
```

```{r}
matrisome_markers <- subset (all.markers, subset = all.markers$gene %in% matrisome_list)
table (matrisome_markers$cluster)

matrisome_markers <- subset (matrisome_markers, pct.1 > 0.25)
table (matrisome_markers$cluster)
#core
core_matrisome_markers <- subset (matrisome_markers, subset = matrisome_markers$gene %in% selected_core_matrisome)
#associated
associated_matrisome_markers <- subset (matrisome_markers, subset = matrisome_markers$gene %in% selected_associated_matrisome)
```

```{r}
core_counts <- with(core_matrisome_markers, table(cluster)) %>%
  as.data.frame()
core_counts$mat <- "Core Matrisome"

associated_counts <- with(associated_matrisome_markers, table(cluster)) %>%
  as.data.frame()
associated_counts$mat <- "Associated Matrisome"
ccounts <- rbind(core_counts, associated_counts)

gg1 <- ggplot(ccounts,
       aes(x = cluster, y = Freq,
           fill = cluster, label = cluster)) +
  geom_bar(stat="identity") +
  theme_clean()+
  theme(legend.position = "bottom")+
  scale_fill_manual(values = colpal)

gg1 + facet_wrap(~factor(mat, levels=c("Core Matrisome","Associated Matrisome")), nrow = 2)
```

```{r}
top1 <- core_matrisome_markers %>%
  group_by(cluster) %>%
  top_n(1, avg_log2FC)
t1 <- unique (top1$gene)
core_mat_dot <- DotPlot(merged_seurat, features = t1, cols = 'RdBu', scale.min = 5, scale.max = 85) + RotatedAxis()
core_mat_dot+ scale_size(range = c(1, 8))& coord_flip()
rm (t1)
```

```{r}
top1 <- associated_matrisome_markers %>%
  group_by(cluster) %>%
  top_n(1, avg_log2FC)
t1 <- unique (top1$gene)
associated_mat_dot <- DotPlot(merged_seurat, features = t1, cols = 'RdBu', scale.min = 5, scale.max = 60) + RotatedAxis()
associated_mat_dot+ scale_size(range = c(1, 8))& coord_flip()
rm (t1)
```
